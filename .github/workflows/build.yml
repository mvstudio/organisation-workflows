name: "Build workflow"

on:
  workflow_call:
    outputs:
      digest:
        description: The digest of the new built Docker image
        value: ${{ jobs.build.outputs.digest }}
      image:
        description: The name of the new built Docker image
        value: ${{ jobs.build.outputs.image }}

jobs:
  build:
    name: Build, scan and push Docker image

    runs-on: ubuntu-latest

    outputs:
      digest: ${{ steps.docker_push.outputs.digest }}
      image: ${{ steps.docker_meta.outputs.image }}

    steps:
      - name: Chect out the repo
        uses: actions/checkout@v3

      - name: Docker meta - Define Docker image name and tag
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch,suffix=-${{ github.run_number }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and export Docker image
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          load: true
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: ${{ steps.docker_meta.outputs.tags }}
          format: sarif
          output: 'trivy-results.sarif'
          severity: CRITICAL,HIGH

      - name: Push Docker image
        if: ${{ github.ref_name == 'master' || github.ref_name == 'dev' || contains(github.event.head_commit.message, '[push image]')}}
        id: docker_push
        uses: docker/build-push-action@v3
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.docker_meta.outputs.tags }}
